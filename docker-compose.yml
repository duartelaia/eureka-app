version: '3.8'

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./01-init-test-db.sql:/docker-entrypoint-initdb.d/01-init-test-db.sql
      - ./02-init-main-db-schema.sql:/docker-entrypoint-initdb.d/02-init-main-db-schema.sql
      - ./02-init-test-db-schema.sql:/docker-entrypoint-initdb.d/02-init-test-db-schema.sql
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${BACKEND_PORT}
    depends_on:
      - db
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./wait-for-it.sh:/wait-for-it.sh
    command: ["bash", "/wait-for-it.sh", "db:5432", "--", "npm", "start"]

  frontend:
    build:
      context: ./frontend
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  pgdata:
